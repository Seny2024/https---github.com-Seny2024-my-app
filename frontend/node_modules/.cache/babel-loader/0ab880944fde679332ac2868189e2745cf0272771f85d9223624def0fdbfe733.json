{"ast":null,"code":"// /frontend/src/services/authService.js\n\nimport axios from 'axios';\n\n// URL de base de l'API (vous pouvez changer cette URL selon votre configuration)\nconst API_URL = 'http://localhost:3000/api/users/';\n\n// Fonction pour inscrire un utilisateur\nconst register = async userData => {\n  const response = await axios.post(API_URL + 'register', userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Fonction pour connecter un utilisateur\nconst login = async userData => {\n  const response = await axios.post(API_URL + 'login', userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Fonction pour déconnecter un utilisateur\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst authService = {\n  register,\n  login,\n  logout\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","authService"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/services/authService.js"],"sourcesContent":["// /frontend/src/services/authService.js\r\n\r\nimport axios from 'axios';\r\n\r\n// URL de base de l'API (vous pouvez changer cette URL selon votre configuration)\r\nconst API_URL = 'http://localhost:3000/api/users/';\r\n\r\n// Fonction pour inscrire un utilisateur\r\nconst register = async (userData) => {\r\n  const response = await axios.post(API_URL + 'register', userData);\r\n  \r\n  if (response.data) {\r\n    localStorage.setItem('user', JSON.stringify(response.data));\r\n  }\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Fonction pour connecter un utilisateur\r\nconst login = async (userData) => {\r\n  const response = await axios.post(API_URL + 'login', userData);\r\n  \r\n  if (response.data) {\r\n    localStorage.setItem('user', JSON.stringify(response.data));\r\n  }\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Fonction pour déconnecter un utilisateur\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,kCAAkC;;AAElD;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,UAAU,EAAEE,QAAQ,CAAC;EAEjE,IAAIC,QAAQ,CAACE,IAAI,EAAE;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7D;EAEA,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMK,KAAK,GAAG,MAAOR,QAAQ,IAAK;EAChC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAEE,QAAQ,CAAC;EAE9D,IAAIC,QAAQ,CAACE,IAAI,EAAE;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7D;EAEA,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;EACnBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBZ,QAAQ;EACRS,KAAK;EACLC;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}