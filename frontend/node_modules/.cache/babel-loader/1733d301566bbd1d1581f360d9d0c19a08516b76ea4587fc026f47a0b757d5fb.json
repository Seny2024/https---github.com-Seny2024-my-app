{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api/loans/';\n\n// Récupérer tous les prêts\nconst getAllLoans = async () => {\n  const token = localStorage.getItem('token'); // Récupérer le jeton d'authentification depuis le stockage local\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}` // Inclure le jeton d'authentification dans l'en-tête de la requête\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  return response.data;\n};\n\n// Récupérer un prêt par son ID\nconst getLoanById = async loanId => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + loanId, config);\n  return response.data;\n};\n\n// Ajouter un prêt\nconst addLoan = async loanData => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, loanData, config);\n  return response.data;\n};\n\n// Mettre à jour un prêt\nconst updateLoan = async (loanId, loanData) => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.put(API_URL + loanId, loanData, config);\n  return response.data;\n};\n\n// Supprimer un prêt\nconst deleteLoan = async loanId => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  await axios.delete(API_URL + loanId, config);\n  return loanId;\n};\nconst loanService = {\n  getAllLoans,\n  getLoanById,\n  addLoan,\n  updateLoan,\n  deleteLoan\n};\nexport default loanService;","map":{"version":3,"names":["axios","API_URL","getAllLoans","token","localStorage","getItem","config","headers","Authorization","response","get","data","getLoanById","loanId","addLoan","loanData","post","updateLoan","put","deleteLoan","delete","loanService"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/services/loanService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api/loans/';\r\n\r\n// Récupérer tous les prêts\r\nconst getAllLoans = async () => {\r\n  const token = localStorage.getItem('token'); // Récupérer le jeton d'authentification depuis le stockage local\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}` // Inclure le jeton d'authentification dans l'en-tête de la requête\r\n    }\r\n  };\r\n  const response = await axios.get(API_URL, config);\r\n  return response.data;\r\n};\r\n\r\n// Récupérer un prêt par son ID\r\nconst getLoanById = async (loanId) => {\r\n  const token = localStorage.getItem('token');\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n  const response = await axios.get(API_URL + loanId, config);\r\n  return response.data;\r\n};\r\n\r\n// Ajouter un prêt\r\nconst addLoan = async (loanData) => {\r\n  const token = localStorage.getItem('token');\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n  const response = await axios.post(API_URL, loanData, config);\r\n  return response.data;\r\n};\r\n\r\n// Mettre à jour un prêt\r\nconst updateLoan = async (loanId, loanData) => {\r\n  const token = localStorage.getItem('token');\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n  const response = await axios.put(API_URL + loanId, loanData, config);\r\n  return response.data;\r\n};\r\n\r\n// Supprimer un prêt\r\nconst deleteLoan = async (loanId) => {\r\n  const token = localStorage.getItem('token');\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n  await axios.delete(API_URL + loanId, config);\r\n  return loanId;\r\n};\r\n\r\nconst loanService = {\r\n  getAllLoans,\r\n  getLoanById,\r\n  addLoan,\r\n  updateLoan,\r\n  deleteLoan,\r\n};\r\n\r\nexport default loanService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;;AAElD;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,KAAM,EAAC,CAAC;IACnC;EACF,CAAC;EACD,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACT,OAAO,EAAEK,MAAM,CAAC;EACjD,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,KAAM;IACjC;EACF,CAAC;EACD,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACT,OAAO,GAAGY,MAAM,EAAEP,MAAM,CAAC;EAC1D,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMG,OAAO,GAAG,MAAOC,QAAQ,IAAK;EAClC,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,KAAM;IACjC;EACF,CAAC;EACD,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAI,CAACf,OAAO,EAAEc,QAAQ,EAAET,MAAM,CAAC;EAC5D,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMM,UAAU,GAAG,MAAAA,CAAOJ,MAAM,EAAEE,QAAQ,KAAK;EAC7C,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,KAAM;IACjC;EACF,CAAC;EACD,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACkB,GAAG,CAACjB,OAAO,GAAGY,MAAM,EAAEE,QAAQ,EAAET,MAAM,CAAC;EACpE,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMQ,UAAU,GAAG,MAAON,MAAM,IAAK;EACnC,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,KAAM;IACjC;EACF,CAAC;EACD,MAAMH,KAAK,CAACoB,MAAM,CAACnB,OAAO,GAAGY,MAAM,EAAEP,MAAM,CAAC;EAC5C,OAAOO,MAAM;AACf,CAAC;AAED,MAAMQ,WAAW,GAAG;EAClBnB,WAAW;EACXU,WAAW;EACXE,OAAO;EACPG,UAAU;EACVE;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}