{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api/books/';\n\n// Fonction pour récupérer le token d'authentification depuis le stockage local\nconst getToken = () => {\n  return localStorage.getItem('authToken');\n};\n\n// Fonction pour configurer les en-têtes avec le token d'authentification\nconst getAuthHeaders = () => {\n  const token = getToken();\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\nconst createBook = async book => {\n  try {\n    const token = localStorage.getItem('token'); // ou une autre méthode pour obtenir le token\n    const response = await axios.post(API_URL, book, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la création du livre!', error);\n    throw error;\n  }\n};\n\n// Récupérer un livre par son ID\nconst getBookById = async bookId => {\n  const response = await axios.get(API_URL + bookId, getAuthHeaders());\n  return response.data;\n};\n\n// Mettre à jour un livre\nconst updateBook = async (bookId, bookData) => {\n  const response = await axios.put(API_URL + bookId, bookData, getAuthHeaders());\n  return response.data;\n};\n\n// Supprimer un livre\nconst deleteBook = async bookId => {\n  await axios.delete(API_URL + bookId, getAuthHeaders());\n  return bookId;\n};\nconst bookService = {\n  createBook,\n  getAllBooks,\n  getBookById,\n  updateBook,\n  deleteBook\n};\nexport default bookService;","map":{"version":3,"names":["axios","API_URL","getToken","localStorage","getItem","getAuthHeaders","token","headers","Authorization","createBook","book","response","post","data","error","console","getBookById","bookId","get","updateBook","bookData","put","deleteBook","delete","bookService","getAllBooks"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/services/bookService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api/books/';\r\n\r\n// Fonction pour récupérer le token d'authentification depuis le stockage local\r\nconst getToken = () => {\r\n  return localStorage.getItem('authToken');\r\n};\r\n\r\n// Fonction pour configurer les en-têtes avec le token d'authentification\r\nconst getAuthHeaders = () => {\r\n  const token = getToken();\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n};\r\n\r\nconst createBook = async (book) => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // ou une autre méthode pour obtenir le token\r\n    const response = await axios.post(API_URL, book, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la création du livre!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Récupérer un livre par son ID\r\nconst getBookById = async (bookId) => {\r\n  const response = await axios.get(API_URL + bookId, getAuthHeaders());\r\n  return response.data;\r\n};\r\n\r\n// Mettre à jour un livre\r\nconst updateBook = async (bookId, bookData) => {\r\n  const response = await axios.put(API_URL + bookId, bookData, getAuthHeaders());\r\n  return response.data;\r\n};\r\n\r\n// Supprimer un livre\r\nconst deleteBook = async (bookId) => {\r\n  await axios.delete(API_URL + bookId, getAuthHeaders());\r\n  return bookId;\r\n};\r\n\r\nconst bookService = {\r\n  createBook,\r\n  getAllBooks,\r\n  getBookById,\r\n  updateBook,\r\n  deleteBook,\r\n};\r\n\r\nexport default bookService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;;AAElD;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAC1C,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,OAAO;IACLK,OAAO,EAAE;MACPC,aAAa,EAAG,UAASF,KAAM;IACjC;EACF,CAAC;AACH,CAAC;AAED,MAAMG,UAAU,GAAG,MAAOC,IAAI,IAAK;EACjC,IAAI;IACF,MAAMJ,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,MAAMO,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAACX,OAAO,EAAES,IAAI,EAAE;MAC/CH,OAAO,EAAE;QACPC,aAAa,EAAG,UAASF,KAAM;MACjC;IACF,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAME,WAAW,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAMN,QAAQ,GAAG,MAAMX,KAAK,CAACkB,GAAG,CAACjB,OAAO,GAAGgB,MAAM,EAAEZ,cAAc,CAAC,CAAC,CAAC;EACpE,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMM,UAAU,GAAG,MAAAA,CAAOF,MAAM,EAAEG,QAAQ,KAAK;EAC7C,MAAMT,QAAQ,GAAG,MAAMX,KAAK,CAACqB,GAAG,CAACpB,OAAO,GAAGgB,MAAM,EAAEG,QAAQ,EAAEf,cAAc,CAAC,CAAC,CAAC;EAC9E,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMS,UAAU,GAAG,MAAOL,MAAM,IAAK;EACnC,MAAMjB,KAAK,CAACuB,MAAM,CAACtB,OAAO,GAAGgB,MAAM,EAAEZ,cAAc,CAAC,CAAC,CAAC;EACtD,OAAOY,MAAM;AACf,CAAC;AAED,MAAMO,WAAW,GAAG;EAClBf,UAAU;EACVgB,WAAW;EACXT,WAAW;EACXG,UAAU;EACVG;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}