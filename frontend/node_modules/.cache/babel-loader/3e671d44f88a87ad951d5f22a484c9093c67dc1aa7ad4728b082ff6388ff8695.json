{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitie\\\\Documents\\\\BUREAU\\\\UNIVERSITE EUROMED FES\\\\EIDIA-Big Data-2A\\\\D\\xE9veloppement SAAS\\\\my-app\\\\frontend\\\\src\\\\components\\\\EditProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = () => {\n  _s();\n  const [profileData, setProfileData] = useState({});\n  const {\n    userId\n  } = useParams();\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const data = await authService.getUser(userId);\n        setProfileData(data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du profil:', error);\n      }\n    };\n    fetchProfileData();\n  }, [userId]);\n\n  // Fonction de gestion de la soumission du formulaire de mise à jour du profil\n  const handleSubmit = async () => {\n    try {\n      await authService.updateProfile(userId, profileData);\n      console.log('Profil mis à jour avec succès');\n      // Ajoutez une logique pour rediriger l'utilisateur vers une autre page ou afficher un message de succès\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du profil:', error);\n      // Ajoutez une logique pour gérer l'erreur, par exemple afficher un message d'erreur à l'utilisateur\n    }\n  };\n\n  // Rendu du composant\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: profileData.nom,\n        onChange: e => setProfileData({\n          ...profileData,\n          nom: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: profileData.email,\n        onChange: e => setProfileData({\n          ...profileData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProfile, \"0ISVkKerKK+IFgXzyLubSoESmCQ=\", false, function () {\n  return [useParams];\n});\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","authService","jsxDEV","_jsxDEV","EditProfile","_s","profileData","setProfileData","userId","fetchProfileData","data","getUser","error","console","handleSubmit","updateProfile","log","children","onSubmit","type","value","nom","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","$RefreshReg$"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/components/EditProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\n\r\nconst EditProfile = () => {\r\n  const [profileData, setProfileData] = useState({});\r\n  const { userId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        const data = await authService.getUser(userId);\r\n        setProfileData(data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération du profil:', error);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, [userId]);\r\n\r\n  // Fonction de gestion de la soumission du formulaire de mise à jour du profil\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await authService.updateProfile(userId, profileData);\r\n      console.log('Profil mis à jour avec succès');\r\n      // Ajoutez une logique pour rediriger l'utilisateur vers une autre page ou afficher un message de succès\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour du profil:', error);\r\n      // Ajoutez une logique pour gérer l'erreur, par exemple afficher un message d'erreur à l'utilisateur\r\n    }\r\n  };\r\n\r\n  // Rendu du composant\r\n  return (\r\n    <div>\r\n      {/* Formulaire de mise à jour du profil */}\r\n      {/* Utilisez les valeurs de profileData pour pré-remplir le formulaire */}\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Champs de formulaire pour la mise à jour du profil */}\r\n        {/* Assurez-vous que ces champs sont liés à l'état local de profileData */}\r\n        <input type=\"text\" value={profileData.nom} onChange={(e) => setProfileData({ ...profileData, nom: e.target.value })} />\r\n        <input type=\"email\" value={profileData.email} onChange={(e) => setProfileData({ ...profileData, email: e.target.value })} />\r\n        {/* Autres champs de formulaire pour les autres données du profil */}\r\n        <button type=\"submit\">Enregistrer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM;IAAES;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACU,OAAO,CAACH,MAAM,CAAC;QAC9CD,cAAc,CAACG,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAEDH,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMb,WAAW,CAACc,aAAa,CAACP,MAAM,EAAEF,WAAW,CAAC;MACpDO,OAAO,CAACG,GAAG,CAAC,+BAA+B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAChE;IACF;EACF,CAAC;;EAED;EACA,oBACET,OAAA;IAAAc,QAAA,eAGEd,OAAA;MAAMe,QAAQ,EAAEJ,YAAa;MAAAG,QAAA,gBAG3Bd,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEd,WAAW,CAACe,GAAI;QAACC,QAAQ,EAAGC,CAAC,IAAKhB,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEe,GAAG,EAAEE,CAAC,CAACC,MAAM,CAACJ;QAAM,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvHzB,OAAA;QAAOgB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEd,WAAW,CAACuB,KAAM;QAACP,QAAQ,EAAGC,CAAC,IAAKhB,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEuB,KAAK,EAAEN,CAAC,CAACC,MAAM,CAACJ;QAAM,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5HzB,OAAA;QAAQgB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5CID,WAAW;EAAA,QAEIJ,SAAS;AAAA;AAAA8B,EAAA,GAFxB1B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}