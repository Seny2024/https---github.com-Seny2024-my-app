{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api/books/';\nconst createBook = async book => {\n  try {\n    const token = localStorage.getItem('token'); // ou une autre méthode pour obtenir le token\n    const response = await axios.post(API_URL, book, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la création du livre!', error);\n    throw error;\n  }\n};\nconst getAllBooks = async () => {\n  try {\n    const token = localStorage.getItem('token'); // ou une autre méthode pour obtenir le token\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des livres!', error);\n    throw error;\n  }\n};\nconst getBookById = async bookId => {\n  try {\n    const token = localStorage.getItem('token'); // Obtenir le token depuis localStorage\n    const response = await axios.get(`${API_URL}/${bookId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération du livre!', error);\n    throw error;\n  }\n};\nconst updateBook = async (bookId, bookData) => {\n  try {\n    const token = localStorage.getItem('token'); // Obtenir le token depuis le localStorage\n    const response = await axios.put(`${API_URL}/${bookId}`, bookData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la mise à jour du livre!', error);\n    throw error;\n  }\n};\nconst deleteBook = async bookId => {\n  try {\n    const token = localStorage.getItem('token'); // Obtenir le token depuis le localStorage\n    await axios.delete(`${API_URL}/${bookId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return bookId;\n  } catch (error) {\n    console.error('Erreur lors de la suppression du livre!', error);\n    throw error;\n  }\n};\nconst bookService = {\n  createBook,\n  getAllBooks,\n  getBookById,\n  updateBook,\n  deleteBook\n};\nexport default bookService;","map":{"version":3,"names":["axios","API_URL","createBook","book","token","localStorage","getItem","response","post","headers","Authorization","data","error","console","getAllBooks","get","getBookById","bookId","updateBook","bookData","put","deleteBook","delete","bookService"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/FRONTEND/src/services/bookService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api/books/';\r\n\r\nconst createBook = async (book) => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // ou une autre méthode pour obtenir le token\r\n    const response = await axios.post(API_URL, book, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la création du livre!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getAllBooks = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // ou une autre méthode pour obtenir le token\r\n    const response = await axios.get(API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des livres!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getBookById = async (bookId) => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // Obtenir le token depuis localStorage\r\n    const response = await axios.get(`${API_URL}/${bookId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération du livre!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst updateBook = async (bookId, bookData) => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // Obtenir le token depuis le localStorage\r\n    const response = await axios.put(`${API_URL}/${bookId}`, bookData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour du livre!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst deleteBook = async (bookId) => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // Obtenir le token depuis le localStorage\r\n    await axios.delete(`${API_URL}/${bookId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return bookId;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la suppression du livre!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nconst bookService = {\r\n  createBook,\r\n  getAllBooks,\r\n  getBookById,\r\n  updateBook,\r\n  deleteBook,\r\n};\r\n\r\nexport default bookService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}