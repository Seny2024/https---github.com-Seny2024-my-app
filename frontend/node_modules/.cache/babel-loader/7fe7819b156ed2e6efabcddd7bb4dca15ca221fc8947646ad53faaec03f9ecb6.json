{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api/users/';\nconst register = async (nom, email, motDePasse, role) => {\n  const response = await axios.post(`${API_URL}register`, {\n    nom,\n    email,\n    motDePasse,\n    role\n  });\n  if (response.data.token) {\n    localStorage.setItem('token', response.data.token);\n    console.log('Token stored after register:', response.data.token);\n  }\n  return response.data;\n};\n/*\r\nconst login = async (email, motDePasse) => {\r\n  const response = await axios.post(`${API_URL}login`, {\r\n    email,\r\n    motDePasse,\r\n  });\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n    console.log('Token stored after login:', response.data.token);\r\n  }\r\n  return response.data;\r\n};\r\n/*\r\nconst getUser = async () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token retrieved from localStorage:', token);\r\n  if (!token) return null;\r\n  const response = await axios.get(`${API_URL}profile`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};*/\n// authService.js\n\n// authService.js\n\nconst login = async (email, motDePasse) => {\n  const data = await authService.login(email, motDePasse);\n  if (data) {\n    const userData = await authService.getUser(); // Fetch user after login\n    console.log('Logged in user data:', userData); // Debugging\n\n    // Store user ID in localStorage\n    localStorage.setItem('userId', userData.id);\n    setUser(userData);\n    setIsAuthenticated(true);\n  }\n};\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    console.log('Token retrieved from localStorage:', token);\n    if (!token) return null;\n    const response = await axios.get(`${API_URL}profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const userData = response.data;\n    const userId = userData.id; // Extract user ID from user data\n    console.log('User ID retrieved:', userId); // Debugging\n    return {\n      ...userData,\n      userId\n    }; // Return user data along with user ID\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('token');\n  console.log('Token removed from localStorage');\n};\nconst updateProfile = async (userId, profileData) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('Token not found in localStorage');\n  }\n  try {\n    const response = await axios.put(`${API_URL}${userId}`, profileData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la mise à jour du profil!', error);\n    throw error;\n  }\n};\nconst getAllUsers = async () => {\n  const token = localStorage.getItem('token');\n  console.log('Token retrieved from localStorage:', token);\n  if (!token) throw new Error('Token not found in localStorage');\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error while fetching all users:', error);\n    throw error;\n  }\n};\nconst authService = {\n  register,\n  login,\n  getUser,\n  logout,\n  updateProfile,\n  // Ajout de la fonction updateProfile\n  getAllUsers\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","nom","email","motDePasse","role","response","post","data","token","localStorage","setItem","console","log","login","authService","userData","getUser","id","setUser","setIsAuthenticated","getItem","get","headers","Authorization","userId","error","logout","removeItem","updateProfile","profileData","Error","put","getAllUsers"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api/users/';\r\n\r\nconst register = async (nom, email, motDePasse, role) => {\r\n  const response = await axios.post(`${API_URL}register`, {\r\n    nom,\r\n    email,\r\n    motDePasse,\r\n    role,\r\n  });\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n    console.log('Token stored after register:', response.data.token);\r\n  }\r\n  return response.data;\r\n};\r\n/*\r\nconst login = async (email, motDePasse) => {\r\n  const response = await axios.post(`${API_URL}login`, {\r\n    email,\r\n    motDePasse,\r\n  });\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n    console.log('Token stored after login:', response.data.token);\r\n  }\r\n  return response.data;\r\n};\r\n/*\r\nconst getUser = async () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token retrieved from localStorage:', token);\r\n  if (!token) return null;\r\n  const response = await axios.get(`${API_URL}profile`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};*/\r\n// authService.js\r\n\r\n// authService.js\r\n\r\nconst login = async (email, motDePasse) => {\r\n  const data = await authService.login(email, motDePasse);\r\n  if (data) {\r\n    const userData = await authService.getUser(); // Fetch user after login\r\n    console.log('Logged in user data:', userData); // Debugging\r\n    \r\n    // Store user ID in localStorage\r\n    localStorage.setItem('userId', userData.id);\r\n    \r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n  }\r\n};\r\n\r\n\r\nconst getUser = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    console.log('Token retrieved from localStorage:', token);\r\n    if (!token) return null;\r\n    \r\n    const response = await axios.get(`${API_URL}profile`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    const userData = response.data;\r\n    const userId = userData.id; // Extract user ID from user data\r\n    console.log('User ID retrieved:', userId); // Debugging\r\n    return { ...userData, userId }; // Return user data along with user ID\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem('token');\r\n  console.log('Token removed from localStorage');\r\n};\r\n\r\n\r\nconst updateProfile = async (userId, profileData) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('Token not found in localStorage');\r\n  }\r\n  \r\n  try {\r\n    const response = await axios.put(`${API_URL}${userId}`, profileData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour du profil!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getAllUsers = async () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token retrieved from localStorage:', token);\r\n  if (!token) throw new Error('Token not found in localStorage');\r\n  \r\n  try {\r\n    const response = await axios.get(API_URL, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error while fetching all users:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  getUser,\r\n  logout,\r\n  updateProfile, // Ajout de la fonction updateProfile\r\n  getAllUsers\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}