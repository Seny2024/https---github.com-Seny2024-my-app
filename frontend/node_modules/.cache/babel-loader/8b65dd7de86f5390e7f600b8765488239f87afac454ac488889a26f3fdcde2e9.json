{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport authService from '../services/authService';\nconst EditProfile = () => {\n  _s();\n  const {\n    userId\n  } = useParams(); // Récupération de l'ID de l'utilisateur depuis l'URL\n\n  // Utilisation de l'ID pour charger les données du profil de l'utilisateur\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const data = await authService.getUser(userId);\n        // Mettez à jour l'état local avec les données du profil\n      } catch (error) {\n        console.error('Erreur lors de la récupération du profil:', error);\n      }\n    };\n    fetchProfileData();\n  }, [userId]); // Utilisez userId comme dépendance pour recharger les données du profil lorsque l'ID change\n\n  // Reste du code pour l'édition du profil\n};\n_s(EditProfile, \"dAkeknid0jtr896A69slfhcPzHI=\", false, function () {\n  return [useParams];\n});\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","authService","EditProfile","_s","userId","fetchProfileData","data","getUser","error","console","_c","$RefreshReg$"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/components/EditProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\n\r\nconst EditProfile = () => {\r\n  const { userId } = useParams(); // Récupération de l'ID de l'utilisateur depuis l'URL\r\n\r\n  // Utilisation de l'ID pour charger les données du profil de l'utilisateur\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        const data = await authService.getUser(userId);\r\n        // Mettez à jour l'état local avec les données du profil\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération du profil:', error);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, [userId]); // Utilisez userId comme dépendance pour recharger les données du profil lorsque l'ID change\r\n\r\n  // Reste du code pour l'édition du profil\r\n};\r\n\r\nexport default EditProfile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGJ,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAF,SAAS,CAAC,MAAM;IACd,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAML,WAAW,CAACM,OAAO,CAACH,MAAM,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAEDH,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd;AACF,CAAC;AAACD,EAAA,CAlBID,WAAW;EAAA,QACIF,SAAS;AAAA;AAAAU,EAAA,GADxBR,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}