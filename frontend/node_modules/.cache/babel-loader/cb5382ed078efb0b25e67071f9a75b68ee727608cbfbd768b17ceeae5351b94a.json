{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api/users/';\nconst register = async (nom, email, motDePasse, role) => {\n  const response = await axios.post(`${API_URL}register`, {\n    nom,\n    email,\n    motDePasse,\n    role\n  });\n  if (response.data.token) {\n    localStorage.setItem('token', response.data.token);\n    localStorage.setItem('userId', response.data.user.id); // Assurez-vous que l'ID de l'utilisateur est stocké\n    console.log('Token and User ID stored after register:', response.data.token, response.data.user.id);\n  }\n  return response.data;\n};\nconst login = async (email, motDePasse) => {\n  const response = await axios.post(`${API_URL}login`, {\n    email,\n    motDePasse\n  });\n  if (response.data.token) {\n    localStorage.setItem('token', response.data.token);\n    localStorage.setItem('userId', response.data.user.id); // Stockez l'ID de l'utilisateur\n    console.log('Token and User ID stored after login:', response.data.token, response.data.user.id);\n  }\n  return response.data;\n};\nconst getUser = async () => {\n  const token = localStorage.getItem('token');\n  console.log('Token retrieved from localStorage:', token);\n  if (!token) return null;\n  const response = await axios.get(`${API_URL}profile`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nconst logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('userId'); // Supprimez également l'ID de l'utilisateur lors de la déconnexion\n  console.log('Token and User ID removed from localStorage');\n};\nconst updateProfile = async (userId, profileData) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('Token not found in localStorage');\n  }\n  try {\n    const response = await axios.put(`${API_URL}${userId}`, profileData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la mise à jour du profil!', error);\n    throw error;\n  }\n};\nconst getAllUsers = async () => {\n  const token = localStorage.getItem('token');\n  console.log('Token retrieved from localStorage:', token);\n  if (!token) throw new Error('Token not found in localStorage');\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error while fetching all users:', error);\n    throw error;\n  }\n};\nconst authService = {\n  register,\n  login,\n  getUser,\n  logout,\n  updateProfile,\n  getAllUsers\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","nom","email","motDePasse","role","response","post","data","token","localStorage","setItem","user","id","console","log","login","getUser","getItem","get","headers","Authorization","logout","removeItem","updateProfile","userId","profileData","Error","put","error","getAllUsers","authService"],"sources":["C:/Users/nitie/Documents/BUREAU/UNIVERSITE EUROMED FES/EIDIA-Big Data-2A/Développement SAAS/my-app/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api/users/';\r\n\r\nconst register = async (nom, email, motDePasse, role) => {\r\n  const response = await axios.post(`${API_URL}register`, {\r\n    nom,\r\n    email,\r\n    motDePasse,\r\n    role,\r\n  });\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n    localStorage.setItem('userId', response.data.user.id); // Assurez-vous que l'ID de l'utilisateur est stocké\r\n    console.log('Token and User ID stored after register:', response.data.token, response.data.user.id);\r\n  }\r\n  return response.data;\r\n};\r\n\r\nconst login = async (email, motDePasse) => {\r\n  const response = await axios.post(`${API_URL}login`, {\r\n    email,\r\n    motDePasse,\r\n  });\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n    localStorage.setItem('userId', response.data.user.id); // Stockez l'ID de l'utilisateur\r\n    console.log('Token and User ID stored after login:', response.data.token, response.data.user.id);\r\n  }\r\n  return response.data;\r\n};\r\n\r\nconst getUser = async () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token retrieved from localStorage:', token);\r\n  if (!token) return null;\r\n  const response = await axios.get(`${API_URL}profile`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('userId'); // Supprimez également l'ID de l'utilisateur lors de la déconnexion\r\n  console.log('Token and User ID removed from localStorage');\r\n};\r\n\r\nconst updateProfile = async (userId, profileData) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('Token not found in localStorage');\r\n  }\r\n  \r\n  try {\r\n    const response = await axios.put(`${API_URL}${userId}`, profileData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour du profil!', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getAllUsers = async () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token retrieved from localStorage:', token);\r\n  if (!token) throw new Error('Token not found in localStorage');\r\n  \r\n  try {\r\n    const response = await axios.get(API_URL, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error while fetching all users:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  getUser,\r\n  logout,\r\n  updateProfile,\r\n  getAllUsers\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}